# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
#
# domain.rb
#

# ---- original file header ----
#
# @summary
#   Returns the domain name for a given string
#
#
Puppet::Functions.create_function(:'domain') do
  # @param arguments
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :arguments
  end


  def default_impl(*arguments)
    

    if (arguments.size != 1) then
      raise(Puppet::ParseError, "domain(): Wrong number of arguments "+
        "given #{arguments.size} for 1")
    end
  
    domain = "--"
    begin
      
      arg0 = %Q|#{arguments[0]}|
      arg0.sub!(/^\\\\/, '')

      arg0 = arg0.split("\\")[0]

      uri = arg0.split(".")
      hostname = uri.shift
      domain = uri.join(".")
      
    rescue ArgumentError
      raise(Puppet::ParseError, "domain(#{arguments[0]}): is not a valid uri")
    end
    
    return domain
  
  end
end
